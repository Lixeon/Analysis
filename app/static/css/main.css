// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
/*
 * Base structure
 */
/* Move down content because we have a fixed navbar that is 50px tall */


code{
    color:blueviolet;
}
body {
    padding-top: 50px;
}


/*
 * Global add-ons
 */

.sub-header {
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
}

/*
 * Top navigation
 * Hide default border to remove 1px line.
 */
.navbar-fixed-top {
    border: 0;
}

/*
 * Sidebar
 */

/* Hide for mobile, show later */
.sidebar {
    display: none;
}

@media (min-width: 768px) {
    .sidebar {
        position: fixed;
        top: 51px;
        bottom: 0;
        left: 0;
        z-index: 1000;
        display: block;
        padding: 20px;
        overflow-x: hidden;
        overflow-y: auto; /* Scrollable contents if viewport is shorter than content. */
        background-color: #f5f5f5;
        border-right: 1px solid #eee;
    }
}

/* Sidebar navigation */
.nav-sidebar {
    margin-right: -21px; /* 20px padding + 1px border */
    margin-bottom: 20px;
    margin-left: -20px;
}

    .nav-sidebar > li > a {
        padding-right: 20px;
        padding-left: 20px;
    }

    .nav-sidebar > .active > a,
    .nav-sidebar > .active > a:hover,
    .nav-sidebar > .active > a:focus {
        color: #fff;
        background-color: #428bca;
    }


/*
 * Main content
 */

.main {
    padding: 20px;
}

@media (min-width: 768px) {
    .main {
        padding-right: 40px;
        padding-left: 40px;
    }
}

.main .page-header {
    margin-top: 0;
}


/*
 * Placeholder dashboard ideas
 */

.placeholders {
    margin-bottom: 30px;
    text-align: center;
}

    .placeholders h4 {
        margin-bottom: 0;
    }

.placeholder {
    margin-bottom: 20px;
}

    .placeholder img {
        display: inline-block;
        border-radius: 50%;
    }

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
    color: color-yiq($background);
    @include gradient-bg($background);
    border-color: $border;
    @include box-shadow($btn-box-shadow);

    @include hover {
        color: color-yiq($hover-background);
        @include gradient-bg($hover-background);
        border-color: $hover-border;
    }

    &:focus, &.focus

{
    // Avoid using mixin so we can pass custom focus shadow properly @if $enable-shadows

{
    box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
}

@else {
    box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
}

}

// Disabled comes first so active can properly restyle
&.disabled,
&:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
}

&:not(:disabled):not(.disabled):active,
&:not(:disabled):not(.disabled).active,
.show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;

    @if $enable-gradients {
        background-image: none;
        // Remove the gradient for the pressed/active state
    }

    border-color: $active-border;
    &:focus

{
    // Avoid using mixin so we can pass custom focus shadow properly @if $enable-shadows

{
    box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
}

@else {
    box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
}

}
}
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
    color: $color;
    background-color: transparent;
    background-image: none;
    border-color: $color;

    &:hover {
        color: $color-hover;
        background-color: $active-background;
        border-color: $active-border;
    }

    &:focus,
    &.focus {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
    }

    &.disabled,
    &:disabled {
        color: $color;
        background-color: transparent;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
        color: color-yiq($active-background);
        background-color: $active-background;
        border-color: $active-border;
        &:focus

{
    // Avoid using mixin so we can pass custom focus shadow properly @if $enable-shadows and $btn-active-box-shadow != none

{
    box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
}

@else {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
}

}
}
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
    padding: $padding-y $padding-x;
    font-size: $font-size;
    line-height: $line-height;
    // Manually declare to provide an override to the browser default @if $enable-rounded

{
    border-radius: $border-radius;
}

@else {
    border-radius: 0;
}
}
